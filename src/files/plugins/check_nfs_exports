#!/usr/bin/env python3

# Copyright 2022 Canonical Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import subprocess
from pathlib import Path

CHECK_EXPORTS = "/usr/sbin/showmount -e | awk '{ print $1 }' | sed '1,1d'"

SERVICE_STATUS = {
    0: "OKAY",
    1: "WARNING",
    2: "CRITICAL",
    3: "UNKNOWN",
}

def main():
    exit_code = 0
    message = ""
    try:
        # Run command.
        output = subprocess.check_output(
            CHECK_EXPORTS,
            stderr = subprocess.STDOUT,
            shell = True,
            executable = "/bin/bash"
        ).decode().strip()

        if len(output) == 0:
            exit_code = 3
            message = "no export filesystem."
        else:
            # Get a list of export directories.
            exports = list(map(Path, output.split("\n")))
            # Get a list of inaccessible export directories.
            bad_exports = [str(export)
                    for export in exports if not export.exists()]
            if len(bad_exports) > 0:
                exit_code = 3
                message = f"Export {', '.join(bad_exports)} does not exist."
            else:
                message = f"Export {', '.join(bad_exports)} are okay."
    except subprocess.CalledProcessError as e:
        exit_code = e.returncode
        message = e.stdout
    except Exception as e:
        exit_code = 3
        message = e

    print(f"NFS service {SERVICE_STATUS[exit_code]}: {message}")
    sys.exit(exit_code)

if __name__ == "__main__":
    main()
